local current_ballast_weight = 0

local ballast_num = 0

local lost_ballast_id = -1

function on_get_ballast(obj)
end

function on_lose_ballast(obj)
	lost_ballast_id = obj:id()
end

function check_ballast()
	local obj = nil
	if lost_ballast_id > 0 then
		obj = alife():object(lost_ballast_id)
		if obj then
			arc.warning("Íåñàíêöèîíèğîâàííûé ñáğîñ áàëëàñòà! Óíè÷òîæàåì...")
			arc.remove_obj(obj.id)
			
			ballast_num = 0
		end
		
		lost_ballast_id = -1
	end
	
	local t = convert_kg_to_num(current_ballast_weight)
	if (t ~= ballast_num) then
		arc.info("Íåñîâïàäåíèå. Êîğğåêöèÿ...",3)
		local a = db.actor
		obj = a:object("arc_ballast")
		if obj then
			arc.info("Óíè÷òîæàåì ñòàğûé...",1)
			arc.remove_obj(obj:id())
		end
		
		if t>0 then
			alife():create_ammo("arc_ballast", a:position(),
				a:level_vertex_id(), a:game_vertex_id(), a:id(), t)
		end
		
		ballast_num = t
	end
end

function change_ballast(delta)
	arc.info("current_ballast_weight: "..current_ballast_weight.." => "..(current_ballast_weight + delta),3)
	current_ballast_weight = current_ballast_weight + delta
end

function create_ballast()
	local t = convert_kg_to_num(current_ballast_weight)
end

function convert_kg_to_num(kg)
	local n = math.floor(kg*100)
	if n>50000 then
		return 50000
	end
	return n
end
